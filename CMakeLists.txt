# This is a CMake example for Python
cmake_minimum_required(VERSION 3.0)
find_package(Boost COMPONENTS system filesystem REQUIRED)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

add_subdirectory(src)
add_executable(pointer_test src/pointer_test.cpp)
add_executable(template_fcn src/template_fcn.cpp)
add_executable(test_sharedlib src/sharedlib_test.cpp)
add_executable(test_sharedlib2 src/sharedlib_test2.cpp)
add_executable(meta_template src/template_meta.cpp)
add_library(shared_lib SHARED src/sharedlib.cpp)
add_library(shared_lib2 SHARED src/sharedlib2.cpp)
target_link_libraries(pointer_test ${Boost_LIBRARIES})
target_link_libraries(template_fcn ${Boost_LIBRARIES})
target_link_libraries(test_sharedlib shared_lib)
target_link_libraries(test_sharedlib2 shared_lib2)
